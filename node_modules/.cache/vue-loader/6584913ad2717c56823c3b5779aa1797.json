{"remainingRequest":"/Users/brandonmcghee/Repositories/greybuilt-production/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brandonmcghee/Repositories/greybuilt-production/src/admin/ContactTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brandonmcghee/Repositories/greybuilt-production/src/admin/ContactTable.vue","mtime":1618176846878},{"path":"/Users/brandonmcghee/Repositories/greybuilt-production/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brandonmcghee/Repositories/greybuilt-production/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/brandonmcghee/Repositories/greybuilt-production/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brandonmcghee/Repositories/greybuilt-production/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3RhdHVzOiB0cnVlLAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjb250YWN0czogZnVuY3Rpb24oKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5jb250YWN0cy5jb250YWN0cy5tYXAoKGNvbnRhY3QpID0+IGNvbnRhY3QpOwogICAgfSwKICAgIG5hbWU6IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gIiI7CiAgICB9LAogIH0sCiAgZmlsdGVyczogewogICAgZm9ybWF0RGF0ZTogZnVuY3Rpb24odmFsdWUpIHsKICAgICAgaWYgKHZhbHVlKSB7CiAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSh2YWx1ZSk7CiAgICAgICAgdmFyIHBhcnNlZERhdGUgPSBkYXRlLnRvRGF0ZVN0cmluZygpOwogICAgICAgIHJldHVybiBwYXJzZWREYXRlOwogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["ContactTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContactTable.vue","sourceRoot":"src/admin","sourcesContent":["<template>\n  <!-- <div class=\"flex\">\n    <div class=\"my-2 overflow-x-auto\">\n      <table class=\"table-fixed\">\n        <thead class=\"bg-gray-50\">\n          <tr>\n            <th>Name</th>\n            <th>Email</th> \n            <th>Phone Number</th>\n            <th>Call Time</th>\n            <th>Contacted</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(contact, index) in contacts\" :key=\"index\">\n            <td>{{ contact.first_name }} {{ contact.last_name }}</td>\n            <td>{{ contact.email }}</td>\n            <td>{{ contact.phone_number }}</td>\n            <td>{{ contact.call_time | formatDate }}</td>\n            <td :class=\"[{ 'bg-blue-50': status }, 'bg-gray']\">\n              {{ contact.contacted }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div> -->\n  <div\n    class=\"grid grid-cols-12 gap-y-4 w-10/12 mx-auto text-xl text-primary-dark\"\n  >\n    <div class=\"col-span-12\">\n      <h1 class=\"text-5xl text-center\">Contacts</h1>\n    </div>\n    <div\n      v-for=\"(contact, index) in contacts\"\n      :key=\"index\"\n      class=\"col-span-12 grid gap-y-1 border\"\n    >\n      <div\n        class=\"col-span-12 text-center border-b bg-primary text-3xl text-White\"\n      >\n        {{ contact.first_name }} {{ contact.last_name }}\n      </div>\n      <div class=\"col-span-6 px-2 text-center\">\n        {{ contact.email }}\n      </div>\n      <div class=\"col-span-6 px-2 text-center\">\n        {{ contact.phone_number }}\n      </div>\n      <div class=\"col-span-6 px-2 text-center\">\n        {{ contact.call_time | formatDate }}\n      </div>\n      <div class=\"col-span-6 px-2 text-center\">\n        {{ contact.contacted }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      status: true,\n    };\n  },\n  computed: {\n    contacts: function() {\n      return this.$store.state.contacts.contacts.map((contact) => contact);\n    },\n    name: function() {\n      return \"\";\n    },\n  },\n  filters: {\n    formatDate: function(value) {\n      if (value) {\n        var date = new Date(value);\n        var parsedDate = date.toDateString();\n        return parsedDate;\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n"]}]}