{"remainingRequest":"/Users/brandonmcghee/Repositories/greybuilt-production/node_modules/babel-loader/lib/index.js!/Users/brandonmcghee/Repositories/greybuilt-production/node_modules/eslint-loader/index.js??ref--13-0!/Users/brandonmcghee/Repositories/greybuilt-production/src/store/modules/contacts.js","dependencies":[{"path":"/Users/brandonmcghee/Repositories/greybuilt-production/src/store/modules/contacts.js","mtime":1618170818909},{"path":"/Users/brandonmcghee/Repositories/greybuilt-production/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brandonmcghee/Repositories/greybuilt-production/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/brandonmcghee/Repositories/greybuilt-production/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9icmFuZG9ubWNnaGVlL1JlcG9zaXRvcmllcy9ncmV5YnVpbHQtcHJvZHVjdGlvbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIHN0YXRlID0gewogIGNvbnRhY3RzOiBbXQp9Owp2YXIgZ2V0dGVycyA9IHsKICBhbGxjb250YWN0czogZnVuY3Rpb24gYWxsY29udGFjdHMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5jb250YWN0czsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGZldGNoY29udGFjdHM6IGZ1bmN0aW9uIGZldGNoY29udGFjdHMoX3JlZikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjMwMDAvY29udGFjdHMnKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRjb250YWN0cycsIHJlc3BvbnNlLmRhdGEuY29udGFjdHMpOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0Y29udGFjdHM6IGZ1bmN0aW9uIHNldGNvbnRhY3RzKHN0YXRlLCBjb250YWN0cykgewogICAgcmV0dXJuIHN0YXRlLmNvbnRhY3RzID0gY29udGFjdHM7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/Users/brandonmcghee/Repositories/greybuilt-production/src/store/modules/contacts.js"],"names":["axios","state","contacts","getters","allcontacts","actions","fetchcontacts","commit","get","then","response","data","mutations","setcontacts"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE;AADE,CAAd;AAMA,IAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAG,qBAAAH,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAV;AAAA;AADL,CAAhB;AAIA,IAAMG,OAAO,GAAG;AACPC,EAAAA,aADO,+BACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAATC,cAAAA,MAAS,QAATA,MAAS;AAAA;AAAA,qBACPP,KAAK,CAACQ,GAAN,CAAU,gCAAV,EACtBC,IADsB,CACjB,UAAAC,QAAQ,EAAI;AAEhBH,gBAAAA,MAAM,CAAC,aAAD,EAAgBG,QAAQ,CAACC,IAAT,CAAcT,QAA9B,CAAN;AAEH,eALwB,CADO;;AAAA;AACxBQ,cAAAA,QADwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS/B;AAVa,CAAhB;AAeA,IAAME,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAC,qBAACZ,KAAD,EAAQC,QAAR;AAAA,WAAsBD,KAAK,CAACC,QAAN,GAAiBA,QAAvC;AAAA;AADI,CAAlB;AAIA,eAAe;AACbD,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,OAAO,EAAPA,OAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbO,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import axios from 'axios';\n\nconst state = {\n  contacts: [\n\n  ]\n};\n\nconst getters = {\n  allcontacts : state => state.contacts\n};\n\nconst actions = {\n   async fetchcontacts({ commit }){\n    const response = await axios.get('http://localhost:3000/contacts')\n    .then(response => {\n\n      commit('setcontacts', response.data.contacts);\n\n  });\n    // console.log('setcontacts',response.data)\n\n  }\n\n\n};\n\nconst mutations = {\n  setcontacts:(state, contacts) => (state.contacts = contacts)\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}"]}]}